---
interface Props {
  title: string;
  isOpen?: boolean;
}

const { title, isOpen = false } = Astro.props;
---

<div class="accordion">
  <button class="accordion-header" aria-expanded={isOpen ? 'true' : 'false'}>
    <h3>{title}</h3>
    <span class="accordion-icon">{isOpen ? '-' : '+'}</span>
  </button>
  <div class="accordion-content" style={{ display: isOpen ? 'block' : 'none' }}>
    <slot />
  </div>
</div>

<script is:inline>
  document.querySelectorAll('.accordion-header').forEach(header => {
    header.addEventListener('click', () => {
      const content = header.nextElementSibling;
      const isExpanded = header.getAttribute('aria-expanded') === 'true';

      header.setAttribute('aria-expanded', String(!isExpanded));
      content.style.display = isExpanded ? 'none' : 'block';
      header.querySelector('.accordion-icon').textContent = isExpanded ? '+' : '-';
    });
  });
</script>

<style>
  .accordion {
    border: 1px solid #eee;
    margin-bottom: 10px;
    border-radius: 5px;
  }
  .accordion-header {
    background-color: #f9f9f9;
    padding: 15px;
    width: 100%;
    text-align: left;
    border: none;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 1.1rem;
    font-weight: 600;
  }
  .accordion-content {
    padding: 15px;
    border-top: 1px solid #eee;
  }
  .accordion-icon {
    font-size: 1.5rem;
  }
</style>