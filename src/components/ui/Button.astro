---
interface Props {
  variant?: 'primary' | 'secondary' | 'outline';
  href?: string;
  type?: 'submit' | 'button';
  onClick?: () => void;
  className?: string;
}

const { variant = 'primary', href, type = 'button', onClick, className } = Astro.props;

let baseClass = 'py-3 px-6 rounded-md font-bold transition-colors duration-200';

switch (variant) {
  case 'primary':
    baseClass += ' bg-oxford-blue text-white hover:bg-gold';
    break;
  case 'secondary':
    baseClass += ' bg-sky-blue text-brand-black hover:bg-oxford-blue hover:text-white';
    break;
  case 'outline':
    baseClass += ' border-2 border-oxford-blue text-oxford-blue hover:bg-oxford-blue hover:text-white';
    break;
}

const Tag = href ? 'a' : 'button';
---

<Tag
  class={`${baseClass} ${className || ''}`}
  {... (href ? { href } : {})}
  {... (!href ? { type, onClick } : {})}
>
  <slot />
</Tag>

<style>
  /* Define custom properties for colors if not already in Tailwind config */
  :root {
    --oxford-blue: #002147;
    --brand-black: #1E1E1E;
    --brand-gold: #D4AF37;
    --sky-blue: #A9D6E5;
  }

  .bg-oxford-blue { background-color: var(--oxford-blue); }
  .text-oxford-blue { color: var(--oxford-blue); }
  .border-oxford-blue { border-color: var(--oxford-blue); }

  .bg-sky-blue { background-color: var(--sky-blue); }
  .text-brand-black { color: var(--brand-black); }

  .hover\:bg-gold:hover { background-color: var(--brand-gold); }
  .hover\:bg-oxford-blue:hover { background-color: var(--oxford-blue); }
  .hover\:text-white:hover { color: #fff; }
</style>